[versions]
activityCompose = "1.10.1"
agp = "8.9.3"
androidPdfViewer = "3.2.0-beta.3"
browser = "1.8.0"
coilCompose = "3.2.0"
colormath = "3.6.1"
commonsLang3 = "3.17.0"
composeMultiplatformLifecycleTracker = "1.0.0"
composeWebviewMultiplatform = "1.9.40"
concurrentFuturesKtx = "1.2.0"
cupertino = "0.2.0-alpha05"
firebaseAdmin = "9.5.0"
glanceAppwidget = "1.1.1"
glanceMaterial3 = "1.1.1"
kotlinxCoroutinesCore = "1.10.2"
kotlinxCoroutinesGuava = "1.10.2"
kotlinxCoroutinesSwing = "1.10.2"
materialIconsExtended = "1.7.8"
materialKolor = "2.0.0"
weak = "3.0.0"
xmlCore = "0.91.1"
coreKtx = "1.16.0"
coreSplashscreen = "1.1.0-rc01"
foundation = "1.8.2"
compose = "1.8.2"
composeMaterial = "1.4.1"
composeFoundation = "1.4.1"
compose-plugin = "1.8.2"
horologistComposeLayout = "0.7.14-beta"
kotlin = "2.1.21"
kotlinxCollectionsImmutable = "0.4.0"
googleServices = "4.4.2"
kotlinxDatetime = "0.6.2"
kotlinxSerializationJson = "1.8.1"
ktor = "3.1.3"
legacySupportV4 = "1.0.0"
lifecycleRuntimeKtx = "2.9.1"
mapsCompose = "6.6.0"
material3 = "1.3.2"
percentlayout = "1.0.0"
playServicesLocation = "21.3.0"
playServicesWearable = "19.0.0"
protolayoutExpression = "1.3.0"
recyclerview = "1.4.0"
reorderable = "2.5.1"
secretsGradlePlugin = "2.0.1"
statelyConcurrency = "2.1.0"
tiles = "1.5.0-rc01"
wear = "1.3.0"
wearInput = "1.1.0"
wearOngoing = "1.1.0-alpha01"
wearPhoneInteractions = "1.1.0"
workRuntimeKtx = "2.10.1"
zoomable = "0.9.0"
googleDevToolsKsp = "2.1.21-2.0.1"
firebase-bom = "33.15.0"
zoomimageComposeCoil3 = "1.1.0"
logback-version = "1.5.18"
guava-version = "33.4.8-jre"
commons-io-version = "2.19.0"
commons-codec-version = "1.18.0"
geoip2-version = "4.3.0"

[libraries]
android-pdf-viewer = { module = "com.github.mhiew:android-pdf-viewer", version.ref = "androidPdfViewer" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-compose-foundation = { module = "androidx.wear.compose:compose-foundation", version.ref = "composeFoundation" }
androidx-compose-material = { module = "androidx.wear.compose:compose-material", version.ref = "composeMaterial" }
androidx-concurrent-futures-ktx = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "concurrentFuturesKtx" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "foundation" }
androidx-glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "glanceAppwidget" }
androidx-glance-material3 = { module = "androidx.glance:glance-material3", version.ref = "glanceMaterial3" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-material3-window-size-clazz = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "material3" }
androidx-percentlayout = { module = "androidx.percentlayout:percentlayout", version.ref = "percentlayout" }
androidx-protolayout = { module = "androidx.wear.protolayout:protolayout", version.ref = "protolayoutExpression" }
androidx-protolayout-expression = { module = "androidx.wear.protolayout:protolayout-expression", version.ref = "protolayoutExpression" }
androidx-protolayout-material = { module = "androidx.wear.protolayout:protolayout-material", version.ref = "protolayoutExpression" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-tiles = { module = "androidx.wear.tiles:tiles", version.ref = "tiles" }
androidx-wear = { module = "androidx.wear:wear", version.ref = "wear" }
androidx-wear-input = { module = "androidx.wear:wear-input", version.ref = "wearInput" }
androidx-wear-input-testing = { module = "androidx.wear:wear-input-testing", version.ref = "wearInput" }
androidx-wear-ongoing = { module = "androidx.wear:wear-ongoing", version.ref = "wearOngoing" }
androidx-wear-phone-interactions = { module = "androidx.wear:wear-phone-interactions", version.ref = "wearPhoneInteractions" }
androidx-wear-remote-interactions = { module = "androidx.wear:wear-remote-interactions", version.ref = "wearOngoing" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coilCompose" }
colormath = { module = "com.github.ajalt.colormath:colormath", version.ref = "colormath" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
compose-multiplatform-lifecycle-tracker = { module = "io.github.kevinnzou:compose-multiplatform-lifecycle-tracker", version.ref = "composeMultiplatformLifecycleTracker" }
compose-webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebviewMultiplatform" }
cupertino = { module = "io.github.alexzhirkevich:cupertino", version.ref = "cupertino" }
cupertino-native = { module = "io.github.alexzhirkevich:cupertino-native", version.ref = "cupertino" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebaseAdmin" }
jetbrains-kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutinesGuava" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutinesSwing" }
material-kolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
material3-window-size-clazz = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "compose-plugin" }
weak = { module = "dev.opensavvy.pedestal:weak", version.ref = "weak" }
xmlCore = { module = "io.github.pdvrieze.xmlutil:core", version.ref = "xmlCore" }
horologist-compose-layout = { module = "com.google.android.horologist:horologist-compose-layout", version.ref = "horologistComposeLayout" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
guava = { module = "com.google.guava:guava", version.ref = "guava-version" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io-version" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec-version" }
geoip2 = { module = "com.maxmind.geoip2:geoip2", version.ref = "geoip2-version" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-wearable = { module = "com.google.android.gms:play-services-wearable", version.ref = "playServicesWearable" }
reorderable = { module = "sh.calvin.reorderable:reorderable", version.ref = "reorderable" }
secrets-gradle-plugin = { module = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }
serialization-xml = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlCore" }
stately-concurrency = { module = "co.touchlab:stately-concurrency", version.ref = "statelyConcurrency" }
stately-concurrent-collections = { module = "co.touchlab:stately-concurrent-collections", version.ref = "statelyConcurrency" }
zoomable = { module = "me.saket.telephoto:zoomable", version.ref = "zoomable" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging" }
zoomimage-compose-coil3 = { module = "io.github.panpf.zoomimage:zoomimage-compose-coil3", version.ref = "zoomimageComposeCoil3" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
googleDevToolsKsp = { id = "com.google.devtools.ksp", version.ref = "googleDevToolsKsp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }